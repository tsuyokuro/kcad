<Window x:Class="KCad.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
        xmlns:local="clr-namespace:KCad"
        xmlns:properties="clr-namespace:KCad.Properties"
        xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
        xmlns:pl="clr-namespace:Plotter"
        xmlns:me="clr-namespace:KCad"
        
        mc:Ignorable="d"
        Title="KCad" Height="732" Width="1177.667"
        >
    <!--<WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="{x:Static SystemParameters.CaptionHeight}"
                          ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
    </WindowChrome.WindowChrome>-->

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ResDict/ToggleBtnRadio.xaml"/>
                <ResourceDictionary Source="ResDict/Colors.xaml"/>
                <ResourceDictionary Source="ResDict/Images.xaml"/>
                <ResourceDictionary Source="ResDict/ButtonStyle.xaml"/>
                <ResourceDictionary Source="ResDict/ImageCheckBoxs.xaml"/>
                <ResourceDictionary Source="ResDict/MenuStyle.xaml"/>
                <ResourceDictionary Source="ResDict/ScrollBarStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="SimpleListBoxItem" TargetType="ListBoxItem">

                <Setter Property="Background" Value="{StaticResource BaseColor}"/>
                <Setter Property="Foreground" Value="{StaticResource TextColor}"/>

                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Name="Border" Padding="0" SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource ListBoxSelColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MsgListBoxItem" TargetType="ListBoxItem">

                <Setter Property="Background" Value="{StaticResource MsgBGColor}"/>
                <Setter Property="Foreground" Value="{StaticResource MsgTextColor}"/>

                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Name="Border" Padding="0" SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter Property="Foreground" Value="{StaticResource MsgTextColor}"/>
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{StaticResource MsgSelectedBGColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <pl:SelectModeConverter x:Key="SelModeConv"/>
            <pl:FigureTypeConverter x:Key="FigTypeConv"/>
            <pl:ViewModeConverter x:Key="ViewModeConv"/>
            <pl:MeasureModeConverter x:Key="MeasureModeConv"/>


            <DataTemplate x:Key="AutoCompleteBoxItemTemplate">
                <StackPanel Orientation="Horizontal">
                    <Label Content="{Binding Data}" Foreground="{StaticResource TextColor}"/>
                </StackPanel>
            </DataTemplate>

            <!--<Style TargetType="Menu">
                <Setter Property="Foreground" Value="{StaticResource TextColor}"/>
                <Setter Property="Background" Value="{StaticResource MenuColor}"/>
            </Style>

            <Style TargetType="MenuItem" BasedOn="{StaticResource MLB_MenuItem}">
            </Style>-->

        </ResourceDictionary>

    </Window.Resources>

    <Grid>
        <!--Menu space-->
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="1000*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" >
            <MenuItem Header="{x:Static properties:Resources.menu_file}" >
                <MenuItem Tag="load" Header="{x:Static properties:Resources.menu_load}" Click="MenuItem_Click" />
                <MenuItem Tag="save" Header="{x:Static properties:Resources.menu_save}" Click="MenuItem_Click"/>
                <MenuItem Tag="print" Header="{x:Static properties:Resources.menu_print}" Click="MenuItem_Click"/>
            </MenuItem>
            <MenuItem Header="{x:Static properties:Resources.menu_edit}" >
                <MenuItem Tag="undo" Header="Undo" Click="MenuItem_Click"/>
                <MenuItem Tag="redo" Header="Redo" Click="MenuItem_Click"/>
                <MenuItem Tag="copy" Header="Copy" Click="MenuItem_Click"/>
                <MenuItem Tag="paste" Header="Paste" Click="MenuItem_Click"/>
                <MenuItem Tag="separate" Header="Separate" Click="MenuItem_Click"/>
                <MenuItem Tag="bond" Header="Bond" Click="MenuItem_Click"/>
                <MenuItem Tag="to_bezier" Header="To Bezier" Click="MenuItem_Click"/>
                <MenuItem Tag="cut_segment" Header="Cut Segment" Click="MenuItem_Click"/>
                <MenuItem Tag="ins_point" Header="Insert point" Click="MenuItem_Click"/>
                <MenuItem Tag="to_loop" Header="To Loop lines" Click="MenuItem_Click"/>
                <MenuItem Tag="to_unloop" Header="To Unloop lines" Click="MenuItem_Click"/>
                <MenuItem Header="Flip" >
                    <MenuItem Tag="flip_x" Header="Flip X" Click="MenuItem_Click"/>
                    <MenuItem Tag="flip_y" Header="Flip Y" Click="MenuItem_Click"/>
                    <MenuItem Tag="flip_z" Header="Flip Z" Click="MenuItem_Click"/>
                    <MenuItem Tag="flip_normal" Header="Flip Normal" Click="MenuItem_Click"/>
                </MenuItem>
                <MenuItem Tag="clear_layer" Header="Clear layer" Click="MenuItem_Click"/>
                <MenuItem Tag="centroid" Header="Centroid" Click="MenuItem_Click"/>
                <MenuItem Tag="select_all" Header="Select all" Click="MenuItem_Click"/>
            </MenuItem>
            <MenuItem x:Name="SnapMenu" Header="{x:Static properties:Resources.menu_snap}">
                <MenuItem Header="Snap to grid" IsCheckable="True" IsChecked="{Binding SnapToGrid}"/>
                <MenuItem Header="Snap to point" IsCheckable="True" IsChecked="{Binding SnapToPoint}"/>
                <MenuItem Header="Snap to segment" IsCheckable="True" IsChecked="{Binding SnapToSegment}"/>
                <MenuItem Header="Snap to Line" IsCheckable="True" IsChecked="{Binding SnapToLine}"/>
                <MenuItem Tag="grid_settings" Header="Grid Settings" Click="MenuItem_Click"/>
                <MenuItem Tag="snap_settings" Header="Snap Settings" Click="MenuItem_Click"/>
            </MenuItem>
        </Menu>


        <!--Work space-->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="95*"/>
            </Grid.ColumnDefinitions>

            <!--Left panel-->
            <Border BorderBrush="{StaticResource BoarderColor}" BorderThickness="1">
                <StackPanel x:Name="LeftPanel" Grid.Column="0" Background="{StaticResource BaseColor}" >

                    <StackPanel x:Name="SlsectModePanel">
                        <Label />
                        <RadioButton
                            Template="{StaticResource MyTggleButtonTemplate}"
                            Tag="OBJECT"
                            Content="  Select Figure  " 
                            IsChecked="{
                                Binding SelectMode,
                                ConverterParameter=OBJECT,
                                Converter={StaticResource SelModeConv}
                            }"
                        />

                        <RadioButton
                            Template="{StaticResource MyTggleButtonTemplate}"
                            Tag="POINT"
                            Content="  Select Point  " 
                            IsChecked="{
                                Binding SelectMode,
                                ConverterParameter=POINT,
                                Converter={StaticResource SelModeConv}
                            }"
                        />
                    </StackPanel>

                    <StackPanel x:Name="FigurePanel">
                        
                        <Label />

                        <RadioButton
                            Template="{StaticResource MyTggleButtonTemplate}"
                            Tag="LINE"
                            Content="Line" 
                            IsChecked="{
                                Binding FigureType,
                                ConverterParameter=LINE,
                                Converter={StaticResource FigTypeConv}
                            }"
                        />

                        <RadioButton
                            Template="{StaticResource MyTggleButtonTemplate}"
                            Tag="RECT"
                            Content="Rect" 
                            IsChecked="{
                                Binding FigureType,
                                ConverterParameter=RECT,
                                Converter={StaticResource FigTypeConv}
                            }"
                        />

                        <RadioButton
                            Template="{StaticResource MyTggleButtonTemplate}"
                            Tag="POLY_LINES"
                            Content="Poly lines" 
                            IsChecked="{
                                Binding FigureType,
                                ConverterParameter=POLY_LINES,
                                Converter={StaticResource FigTypeConv}
                            }"
                        />

                        <RadioButton
                            Template="{StaticResource MyTggleButtonTemplate}"
                            Tag="CIRCLE"
                            Content="Circle" 
                            IsChecked="{
                                Binding FigureType,
                                ConverterParameter=CIRCLE,
                                Converter={StaticResource FigTypeConv}
                            }"
                        />

                        <RadioButton
                            Template="{StaticResource MyTggleButtonTemplate}"
                            Tag="POINT"
                            Content="Point" 
                            IsChecked="{
                                Binding FigureType,
                                ConverterParameter=POINT,
                                Converter={StaticResource FigTypeConv}
                            }"
                        />

                        <RadioButton
                            Template="{StaticResource MyTggleButtonTemplate}"
                            Tag="DIMENTION_LINE"
                            Content="Dimention" 
                            IsChecked="{
                                Binding FigureType,
                                ConverterParameter=DIMENTION_LINE,
                                Converter={StaticResource FigTypeConv}
                            }"
                        />

                        <Label Height="4"/>

                        <RadioButton
                            Template="{StaticResource MyTggleButtonTemplate}"
                            Tag="POLY_LINE"
                            Content="Measure" 
                            IsChecked="{
                                Binding MeasureMode,
                                ConverterParameter=POLY_LINE,
                                Converter={StaticResource MeasureModeConv}
                            }"
                        />
                    </StackPanel>

                    <Label Height="4"/>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Content="Layer" Background="{StaticResource BaseColor}" Foreground="{StaticResource TextColor}"/>

                        <Button Grid.Column="1"
                                Name="AddLayerButton"
                                Tag="add_layer"
                                Width="20"
                                Content="+"
                                Template="{StaticResource MyButtonTemplate}"
                                FontSize="20"
                                FontWeight="ExtraBold" />

                        <Button Grid.Column="2"
                                Name="RemoveLayerButton"
                                Tag="remove_layer"
                                Width="20"
                                Content="-"
                                Template="{StaticResource MyButtonTemplate}"
                                FontSize="20"
                                FontWeight="ExtraBold" />
                    </Grid>

                    <Grid x:Name="LayerListPanel" Height="250">

                        <ScrollViewer Grid.Row="0"
                                  Style="{StaticResource CustomScrollViewerStyle}"
                                  VerticalScrollBarVisibility = "Auto">

                            <ListBox
                                x:Name="LayerListView"
                                ItemsSource="{Binding}"
                                SelectionMode="Single"
                                ItemContainerStyle="{StaticResource SimpleListBoxItem}"
                                BorderBrush="{StaticResource BoarderColor}"
                                Background="{StaticResource BaseColor}"
                                >

                                <!-- Wheel が効かなくなってしまうのでListBox内部のScrollViewerを除去する -->
                                <ListBox.Template>
                                    <ControlTemplate>
                                        <ItemsPresenter/>
                                    </ControlTemplate>
                                </ListBox.Template>

                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>

                                            <StackPanel Grid.Row="0" Orientation="Horizontal" >
                                                <CheckBox IsChecked="{Binding Path=Visible}"
                                                          Style="{StaticResource VisibleCheckBox}"
                                                          Foreground="White"/>

                                                <CheckBox IsChecked="{Binding Path=Locked}"
                                                          Style="{StaticResource LockedCheckBox}"
                                                          Foreground="White"/>
                                            </StackPanel>
                                            <TextBlock Grid.Row="1" Margin="4" Text="{Binding Path=Name}" />
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </ScrollViewer>
                    </Grid>

                </StackPanel>
            </Border>

            <!--Plotter view and Command view-->
            <Grid Grid.Column="1" Background="{DynamicResource BGColor}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="100*"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="20*"/>
                </Grid.RowDefinitions>

                <WindowsFormsHost x:Name="viewContainer" Grid.Row="0">
                </WindowsFormsHost>

                <GridSplitter Grid.Row="1"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center"
                    Background="{StaticResource BoarderColor}" 
                    ShowsPreview="False"
                    Height="3"
                    />


                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="100*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <ScrollViewer
                        Grid.Row="0"
                        Style="{StaticResource CustomScrollViewerStyle}"
                        VerticalScrollBarVisibility = "Auto">

                        <ListBox
                            x:Name="listMessage"
                            ScrollViewer.CanContentScroll="False"
                            Foreground="{StaticResource MsgTextColor}"
                            Background="{StaticResource MsgBGColor}"
                            ItemContainerStyle="{StaticResource MsgListBoxItem}"
                            BorderThickness="0"
                            Padding="8,0,0,0"
                            >
                            <!-- Wheel が効かなくなってしまうのでListBox内部のScrollViewerを除去する -->
                            <ListBox.Template>
                                <ControlTemplate>
                                    <ItemsPresenter/>
                                </ControlTemplate>
                            </ListBox.Template>
                        </ListBox>

                    </ScrollViewer>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="100*"/>
                        </Grid.ColumnDefinitions>

                        <Border BorderBrush="{StaticResource BoarderColor}" BorderThickness="0,1,0,1">
                            <Button Grid.Column="0"
                                x:Name="RunTextCommandButton"
                                Tag="run_text_command"
                                Content=" Run > "
                                Style="{StaticResource ButtonStyle}"
                                />
                        </Border>


                        <me:AutoCompleteTextBox Grid.Column="1"
                                x:Name="textCommand"
                                BorderThickness="1,1,1,1"
                                BorderBrush="{StaticResource BoarderColor}"
                                Foreground="{StaticResource TextColor}"
                                Background="{StaticResource BGColor}"
                                />
                    </Grid>    
                </Grid>
            </Grid>
        </Grid>

        <!--Status bar-->
        <StackPanel Grid.Row="2" Background="{StaticResource BGColor}" Height="20" HorizontalAlignment="Stretch"
                    Orientation="Horizontal">
            <Rectangle
                VerticalAlignment="Stretch" HorizontalAlignment="Left"  Width="20"/>

            <TextBlock x:Name="textBlockXYZ" TextWrapping="Wrap" Text="{Binding StrCursorPos}"
                VerticalAlignment="Stretch" HorizontalAlignment="Left"  Width="120" Foreground="White">
            </TextBlock>
            <TextBlock x:Name="textBlockXYZ2" TextWrapping="Wrap" Text="{Binding StrCursorPos2}"
                VerticalAlignment="Stretch" HorizontalAlignment="Left"  Width="120" Foreground="White">
            </TextBlock>

            <StackPanel x:Name="ViewModePanel"
                Background="{StaticResource BGColor}"
                Orientation="Horizontal"
                VerticalAlignment="Stretch" >

                <RadioButton
                    Style="{StaticResource CustomToggle}"
                    Template="{StaticResource MyTggleButtonTemplate}"
                    IsChecked="{
                        Binding ViewMode,
                        ConverterParameter=FRONT,
                        Converter={StaticResource ViewModeConv}
                    }">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Column="0"
                            Text=" Front "/>

                    </Grid>

                </RadioButton>

                <RadioButton
                    Style="{StaticResource CustomToggle}"
                    Template="{StaticResource MyTggleButtonTemplate}"
                    IsChecked="{
                        Binding ViewMode,
                        ConverterParameter=BACK,
                        Converter={StaticResource ViewModeConv}
                    }">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Grid.Column="0"
                            Text=" Back "/>

                    </Grid>

                </RadioButton>

                <RadioButton
                    Style="{StaticResource CustomToggle}"
                    Template="{StaticResource MyTggleButtonTemplate}"
                    IsChecked="{
                        Binding ViewMode,
                        ConverterParameter=TOP,
                        Converter={StaticResource ViewModeConv}
                    }">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            Grid.Column="0"
                            Text=" Top "/>

                    </Grid>
                </RadioButton>

                <RadioButton
                    Style="{StaticResource CustomToggle}"
                    Template="{StaticResource MyTggleButtonTemplate}"
                    IsChecked="{
                        Binding ViewMode,
                        ConverterParameter=BOTTOM,
                        Converter={StaticResource ViewModeConv}
                    }">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            Grid.Column="0"
                            Text=" Bottom "/>

                    </Grid>
                </RadioButton>

                <RadioButton
                    Style="{StaticResource CustomToggle}"
                    Template="{StaticResource MyTggleButtonTemplate}"
                    IsChecked="{
                        Binding ViewMode,
                        ConverterParameter=RIGHT,
                        Converter={StaticResource ViewModeConv}
                    }">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            Grid.Column="0"
                            Text=" Right "/>

                    </Grid>

                </RadioButton>

                <RadioButton
                    Style="{StaticResource CustomToggle}"
                    Template="{StaticResource MyTggleButtonTemplate}"
                    IsChecked="{
                        Binding ViewMode,
                        ConverterParameter=LEFT,
                        Converter={StaticResource ViewModeConv}
                    }">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            Grid.Column="0"
                            Text=" Left "/>

                    </Grid>

                </RadioButton>

                <RadioButton
                    Style="{StaticResource CustomToggle}"
                    Template="{StaticResource MyTggleButtonTemplate}"
                    Tag="axis_xyz"
                    IsChecked="{
                        Binding ViewMode,
                        ConverterParameter=FREE,
                        Converter={StaticResource ViewModeConv}
                    }">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock
                            Grid.Column="0"
                            Text=" 3D "/>
                    </Grid>

                </RadioButton>
            </StackPanel>
        </StackPanel>
    </Grid>
</Window>
